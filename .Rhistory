group_by(winning_bidder) %>%
summarise(total_bids = n(),
sum_bids = round(sum(buyer_price, na.rm = TRUE),2),
mean_bids = round(mean(buyer_price, na.rm = TRUE),2)) %>%
filter(!is.na(mean_bids))
bidders_sum_super_expensive <- bidders %>%
filter(buyer_price > 10000) %>%
group_by(winning_bidder) %>%
summarise(total_bids = n(),
sum_bids = round(sum(buyer_price, na.rm = TRUE),2),
mean_bids = round(mean(buyer_price, na.rm = TRUE),2)) %>%
filter(!is.na(mean_bids))
topcalc <- function(bidders_sum, market, n) {
top_total_bids <- sum(bidders_sum[1:n,'total_bids'])
rest_total_bids <- sum(bidders_sum$total_bids) - top_total_bids
top_relation <- data.frame(
market = c(market, market),
group = c(paste0('Top ', as.character(n), ' buyers'), 'Rest of the market'),
total_bids = c(top_total_bids, rest_total_bids),
total_bids_perc = c(round(100*top_total_bids/sum(bidders_sum$total_bids),2),
round(100*rest_total_bids/sum(bidders_sum$total_bids),2)))
return(top_relation)
}
top10perccalc <- function(bidders_sum, market, n) {
n <- round(nrow(bidders_sum)*0.1)
top_total_bids <- sum(bidders_sum[1:n,'total_bids'])
rest_total_bids <- sum(bidders_sum$total_bids) - top_total_bids
top_relation <- data.frame(
market = c(market, market),
group = c(paste0('Top ', as.character(n), ' buyers'), 'Rest of the market'),
total_bids = c(top_total_bids, rest_total_bids),
total_bids_perc = c(round(100*top_total_bids/sum(bidders_sum$total_bids),2),
round(100*rest_total_bids/sum(bidders_sum$total_bids),2)))
return(top_relation)
}
###################################################################
all <- topcalc(bidders_sum, 'All bids', 10)
expensive <- topcalc(bidders_sum_expensive, '> 1,000', 10)
super_expensive <- topcalc(bidders_sum_super_expensive, '> 10,000', 10)
top10 <- data.frame(market = character(),
group = character(),
total_bids = integer(),
total_bids_perc = numeric())
top10 <- bind_rows(top10, all)
top10 <- bind_rows(top10, expensive)
top10 <- bind_rows(top10, super_expensive)
top10$market <- factor(top10$market, levels = c("All bids", "> 1,000", "> 10,000"))
top10 %>%
ggplot(mapping=aes(x=market, y=total_bids_perc, fill=factor(group))) +
geom_bar(position="dodge", stat = "identity") +
geom_text(aes(label = paste0(total_bids_perc, "%")),
position = position_dodge(width = 1),
vjust = -0.5) +
labs(y = "Bids Percentage",
x = '',
title = "Top 10 buyers against the market - Total bids volume - 2023",
fill = "")
###########################################################################
top10_bidders <- bidders_sum[1:10,] %>%
arrange(desc(total_bids))
top10_bidders_under1000 <- bidders %>% filter(winning_bidder %in% top10_bidders$winning_bidder) %>% filter(buyer_price <= 1000) %>%
group_by(winning_bidder) %>%
summarise(total_bids = n(),
sum_bids = round(sum(buyer_price, na.rm = TRUE),2)) %>%
arrange(desc(total_bids)) %>%
mutate(category = 'Under 1000')
top10_bidders_between1000and10000 <- bidders %>% filter(winning_bidder %in% top10_bidders$winning_bidder) %>% filter(buyer_price > 1000 & buyer_price <= 10000) %>%
group_by(winning_bidder) %>%
summarise(total_bids = n(),
sum_bids = round(sum(buyer_price, na.rm = TRUE),2)) %>%
arrange(desc(total_bids)) %>%
mutate(category = 'Between 1,000 and 10,000')
top_10bidders_category <- bind_rows(top10_bidders_under1000, top10_bidders_between1000and10000)
top10_bidders_over10000 <- bidders %>% filter(winning_bidder %in% top10_bidders$winning_bidder) %>% filter(buyer_price > 10000) %>%
group_by(winning_bidder) %>%
summarise(total_bids = n(),
sum_bids = round(sum(buyer_price, na.rm = TRUE),2)) %>%
arrange(desc(total_bids)) %>%
mutate(category = 'Over 10,000')
top_10bidders_category <- bind_rows(top_10bidders_category, top10_bidders_over10000)
top_10bidders_category$winning_bidder <- factor(top_10bidders_category$winning_bidder)
top_10bidders_category <- top_10bidders_category %>%
group_by(winning_bidder) %>%
mutate(total_bids_sum = sum(total_bids),
sum_bids_sum = sum(sum_bids)) %>%
arrange(desc(total_bids_sum))
top_10bidders_category %>%
ggplot(mapping = aes(x = reorder(factor(winning_bidder), total_bids_sum), y = total_bids, fill = category)) +
geom_bar(stat = "identity") +
labs(title = "Top 10 buyers bids composition - Total bids volume - 2023", x = "Buyer", y = "Total bids", fill='Category') +
coord_flip()
##################################
bidders_sum <- bidders_sum %>% arrange(desc(sum_bids))
top10_bidders <- bidders_sum[1:10,] %>%
arrange(desc(total_bids))
top10_bidders_under1000 <- bidders %>% filter(winning_bidder %in% top10_bidders$winning_bidder) %>% filter(buyer_price <= 1000) %>%
group_by(winning_bidder) %>%
summarise(total_bids = n(),
sum_bids = round(sum(buyer_price, na.rm = TRUE),2)) %>%
arrange(desc(total_bids)) %>%
mutate(category = 'Under 1000')
top10_bidders_between1000and10000 <- bidders %>% filter(winning_bidder %in% top10_bidders$winning_bidder) %>% filter(buyer_price > 1000 & buyer_price <= 10000) %>%
group_by(winning_bidder) %>%
summarise(total_bids = n(),
sum_bids = round(sum(buyer_price, na.rm = TRUE),2)) %>%
arrange(desc(total_bids)) %>%
mutate(category = 'Between 1,000 and 10,000')
top_10bidders_category <- bind_rows(top10_bidders_under1000, top10_bidders_between1000and10000)
top10_bidders_over10000 <- bidders %>% filter(winning_bidder %in% top10_bidders$winning_bidder) %>% filter(buyer_price > 10000) %>%
group_by(winning_bidder) %>%
summarise(total_bids = n(),
sum_bids = round(sum(buyer_price, na.rm = TRUE),2)) %>%
arrange(desc(total_bids)) %>%
mutate(category = 'Over 10,000')
top_10bidders_category <- bind_rows(top_10bidders_category, top10_bidders_over10000)
top_10bidders_category$winning_bidder <- factor(top_10bidders_category$winning_bidder)
top_10bidders_category <- top_10bidders_category %>%
group_by(winning_bidder) %>%
mutate(total_bids_sum = sum(total_bids),
sum_bids_sum = sum(sum_bids)) %>%
arrange(desc(total_bids_sum))
top_10bidders_category %>%
arrange(desc(sum_bids_sum)) %>%
ggplot(mapping = aes(x = reorder(factor(winning_bidder), sum_bids_sum), y = sum_bids, fill = category)) +
geom_bar(stat = "identity") +
labs(title = "Top 10 buyers bids composition - Total bids value - 2023", x = "Buyer", y = "Total bids value", fill='Category') +
coord_flip()
######################################
top10_bidders$total_bids_perc <- round(100 * top10_bidders$total_bids / nrow(bidders), 2)
top10_bidders %>%
ggplot(mapping=aes(x=reorder(factor(winning_bidder), total_bids), y=total_bids)) +
geom_bar(stat = "identity") +
geom_text(aes(label = total_bids),
position = position_dodge(width = 1),
hjust = -0.05) +
geom_text(aes(label = paste0(total_bids_perc, "%")),
position = position_dodge(width = 1),
hjust = 1.4) +
labs(x = 'Buyer', y = "Bids Percentage", title = "Top 10 buyers against the market - Total bids volume - 2023") +
coord_flip()
######################################
top10_bidders$sum_bids_perc <- round(100 * top10_bidders$sum_bids / sum(bidders$buyer_price), 2)
top10_bidders %>%
ggplot(mapping=aes(x=reorder(factor(winning_bidder), sum_bids), y=sum_bids)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(sum_bids_perc, "%")),
position = position_dodge(width = 1),
hjust = -0.05) +
labs(x = 'Buyer', y = "Total Bids Value", title = "Top 10 buyers against the market - Total bids value - 2023") +
coord_flip()
#####################################################
all <- top10perccalc(bidders_sum, 'All bids', 10)
expensive <- top10perccalc(bidders_sum_expensive, '> 1,000', 10)
super_expensive <- top10perccalc(bidders_sum_super_expensive, '> 10,000', 10)
top10 <- data.frame(market = character(),
group = character(),
total_bids = integer(),
total_bids_perc = numeric())
top10 <- bind_rows(top10, all)
top10 <- bind_rows(top10, expensive)
top10 <- bind_rows(top10, super_expensive)
top10$market <- factor(top10$market, levels = c("All bids", "> 1,000", "> 10,000"))
top10 %>%
ggplot(mapping=aes(x=market, y=total_bids_perc, fill=factor(group))) +
geom_bar(position="dodge", stat = "identity") +
geom_text(aes(label = paste0(total_bids_perc, "%")),
position = position_dodge(width = 1),
vjust = -0.5) +
labs(y = "Bids Percentage",
x = '',
title = "Top 10 buyers against the market - Total bids volume - 2023",
fill = "")
bidders_sum_under1000 <- bidders %>%
filter(winning_bidder == top10_bidders$winning_bidder) %>%
filter(buyer_price < 1000) %>%
group_by(winning_bidder) %>%
summarise(total_bids = n(),
sum_bids = round(sum(buyer_price, na.rm = TRUE),2),
mean_bids = round(mean(buyer_price, na.rm = TRUE),2)) %>%
filter(!is.na(mean_bids)) %>%
arrange(desc(total_bids))
################################
topcalc <- function(bidders_sum, market, n) {
top_sum_bids <- sum(bidders_sum[1:n,'sum_bids'])
rest_sum_bids <- sum(bidders_sum$sum_bids) - top_sum_bids
top_relation <- data.frame(
market = c(market, market),
group = c(paste0('Top ', as.character(n), ' buyers'), 'Rest of the market'),
sum_bids = c(top_sum_bids, rest_sum_bids),
sum_bids_perc = c(round(100*top_sum_bids/sum(bidders_sum$sum_bids),2),
round(100*rest_sum_bids/sum(bidders_sum$sum_bids),2)))
return(top_relation)
}
top10perccalc <- function(bidders_sum, market, n) {
n <- round(nrow(bidders_sum)*0.1)
top_sum_bids <- sum(bidders_sum[1:n,'sum_bids'])
rest_sum_bids <- sum(bidders_sum$sum_bids) - top_sum_bids
top_relation <- data.frame(
market = c(market, market),
group = c(paste0('Top ', as.character(n), ' buyers'), 'Rest of the market'),
sum_bids = c(top_sum_bids, rest_sum_bids),
sum_bids_perc = c(round(100*top_sum_bids/sum(bidders_sum$sum_bids),2),
round(100*rest_sum_bids/sum(bidders_sum$sum_bids),2)))
return(top_relation)
}
all <- topcalc(bidders_sum, 'All bids', 10)
expensive <- topcalc(bidders_sum_expensive, '> 1,000', 10)
super_expensive <- topcalc(bidders_sum_super_expensive, '> 10,000', 10)
top10 <- data.frame(market = character(),
group = character(),
sum_bids = integer(),
sum_bids_perc = numeric())
top10 <- bind_rows(top10, all)
top10 <- bind_rows(top10, expensive)
top10 <- bind_rows(top10, super_expensive)
top10$market <- factor(top10$market, levels = c("All bids", "> 1,000", "> 10,000"))
top10 %>%
ggplot(mapping=aes(x=market, y=sum_bids_perc, fill=factor(group))) +
geom_bar(position="dodge", stat = "identity") +
geom_text(aes(label = paste0(sum_bids_perc, "%")),
position = position_dodge(width = 1),
vjust = -0.5) +
labs(y = "Total Bids Value",
x = '',
title = "Top 10 buyers against the market - Total bids value - 2023",
fill = "")
######################################################
all <- top10perccalc(bidders_sum, 'All bids', 10)
expensive <- top10perccalc(bidders_sum_expensive, '> 1,000', 10)
super_expensive <- top10perccalc(bidders_sum_super_expensive, '> 10,000', 10)
top10 <- data.frame(market = character(),
group = character(),
sum_bids = integer(),
sum_bids_perc = numeric())
top10 <- bind_rows(top10, all)
top10 <- bind_rows(top10, expensive)
top10 <- bind_rows(top10, super_expensive)
top10$market <- factor(top10$market, levels = c("All bids", "> 1,000", "> 10,000"))
top10 %>%
ggplot(mapping=aes(x=market, y=sum_bids_perc, fill=factor(group))) +
geom_bar(position="dodge", stat = "identity") +
geom_text(aes(label = paste0(sum_bids_perc, "%")),
position = position_dodge(width = 1),
vjust = -0.5) +
labs(y = "Total Bids Value",
x = '',
title = "Top 10 buyers against the market - Total bids value - 2023",
fill = "")
#Loads the rvest, stringr, dplyr and glue libraries
suppressWarnings({
suppressPackageStartupMessages({
library(rvest)
library(stringr)
library(dplyr)
library(glue)
})
})
setwd("C:\\Users\\joaov\\Documents\\Maringa Housing")
# Pedro Granado Imoveis
displayed_properties <- data.frame(NULL)
main_page <-
read_html('https://www.pedrogranado.com.br/pesquisa-de-imoveis/?locacao_venda=V&id_cidade%5B%5D=35&finalidade=&dormitorio=&garagem=&vmi=&vma=&ordem=1')
num_properties <- main_page %>% html_elements("option") %>% .[5] %>% html_text() %>% str_extract(., "(?<=\\()[^)]*(?=\\))") %>% as.integer(.)
num_pages = ceiling(num_properties/16)
for (j in 1:num_pages){
main_page <-
read_html(paste0('https://www.pedrogranado.com.br/pesquisa-de-imoveis/?locacao_venda=V&id_cidade%5B%5D=35&finalidade=&dormitorio=&garagem=&vmi=&vma=&ordem=1&&pag=',j))
urls <- main_page %>% html_nodes("div.col-lg-4") %>% html_elements('a') %>% html_attr("href") %>% unique(.)
for (i in 1:length(urls)){
district <- main_page %>% html_nodes("h4.lead") %>% html_text() %>% .[i]
price <- main_page %>% html_nodes("h3") %>% html_text() %>% .[i+1]
property_url <- paste0("https://www.pedrogranado.com.br/", urls[i])
property_page <-
read_html(property_url)
# Category: Apartment, terrain, house
category <- property_page %>% html_nodes('div.col-4.mb-4') %>% html_nodes('span') %>% html_text() %>% .[1]
area <- property_page %>% html_nodes('div.col-4.mb-4') %>% html_nodes('span') %>% html_text(trim=TRUE) %>% .[3] %>% gsub(' M²','',.) %>% as.numeric(.)
lat <- property_page %>% html_nodes("iframe") %>% html_attr("src") %>% .[2] %>% str_extract("(?<=latIni=)-?\\d+\\.\\d+") %>% as.numeric(.)
long <- property_page %>% html_nodes("iframe") %>% html_attr("src") %>% .[2] %>% str_extract("(?<=longIni=)-?\\d+\\.\\d+") %>% as.numeric(.)
bedrooms <- property_page %>% html_nodes('div.comodos') %>% html_text() %>% .[1] %>% as.integer(.)
bathrooms <- property_page %>% html_nodes('div.comodos') %>% html_text() %>% .[2] %>% as.integer(.)
suite <- property_page %>% html_nodes('div.comodos') %>% html_text() %>% .[3] %>% as.integer(.)
garage <- property_page %>% html_nodes('div.comodos') %>% html_text() %>% .[4] %>% as.integer(.)
broker <- 'Pedro Granado Imóveis'
property_info <- data.frame(property_url = property_url,
broker = broker,
district = district,
price = price,
category = category,
area = area,
bedrooms = bedrooms+suite,
bathrooms = bathrooms+suite,
garage = garage,
lat = lat,
long = long)
displayed_properties <- bind_rows(displayed_properties, property_info)
}
}
# Lelo Imoveis
main_page <-
read_html('https://www.leloimoveis.com.br/imoveis/venda-maringa')
num_properties = main_page %>% html_nodes("strong.list__highlight") %>% html_text() %>% str_extract("\\d+") %>% as.integer(.)
num_pages = ceiling(num_properties/16)
for (j in 1:num_pages){
main_page <-
read_html(paste0('https://www.leloimoveis.com.br/imoveis/venda-maringa-pagina-',j))
urls <- main_page %>% html_nodes("div.list__hover") %>% html_elements('a') %>% html_attr("href")
for (i in 1:length(urls)){
category <- main_page %>% html_elements("span.list__type") %>% .[i] %>% html_text() %>% strsplit(" ") %>% .[[1]] %>% .[1]
price <- main_page %>% html_elements("span.list__price") %>% .[seq(1, length(.), by = 2)] %>% html_text() %>% .[i]
district <- main_page %>% html_elements("span.list__address") %>% .[i] %>% html_text(trim=TRUE) %>% strsplit(" - ") %>% .[[1]] %>% .[1]
property_url <- paste0("https://www.leloimoveis.com.br", urls[i])
property_page <-
read_html(property_url)
bedrooms <- property_page %>% html_nodes("div.jetgrid.jetgrid--justify-left.jetgrid--align-center") %>% html_nodes("strong") %>% html_text(trim=TRUE) %>% .[6] %>% as.integer(.)
bathrooms <- property_page %>% html_nodes("div.jetgrid.jetgrid--justify-left.jetgrid--align-center") %>% html_nodes("strong") %>% html_text(trim=TRUE) %>% .[7] %>% as.integer(.)
garage <- property_page %>% html_nodes("div.jetgrid.jetgrid--justify-left.jetgrid--align-center") %>% html_nodes("strong") %>% html_text(trim=TRUE) %>% .[8] %>% as.integer(.)
area <- property_page %>% html_nodes("div.jetgrid.jetgrid--justify-left.jetgrid--align-center") %>% html_nodes("strong") %>% html_text(trim=TRUE) %>% .[5] %>% str_extract(".*(?=m)") %>% gsub(',','.',.) %>% as.numeric(.)
lat <- property_page %>% html_nodes("div.card__map-container") %>% html_attr("data-latitude") %>% as.numeric(.)
long <- property_page %>% html_nodes("div.card__map-container") %>% html_attr("data-longitude") %>% as.numeric(.)
broker <- 'Lelo Imóveis'
property_info <- data.frame(property_url = property_url,
broker = broker,
district = district,
price = price,
category = category,
area = area,
bedrooms = bedrooms,
bathrooms = bathrooms,
garage = garage,
lat = lat,
long = long)
displayed_properties <- bind_rows(displayed_properties, property_info)
}
}
# Silvio Iwata Imoveis
main_page <-
read_html('https://www.silvioiwata.com.br/imoveis/venda')
num_properties = main_page %>% html_nodes("p.cor-primaria") %>% html_text() %>% str_extract("\\d+") %>% as.integer(.)
num_pages = ceiling(num_properties/9)
for (j in 1:num_pages){
main_page <-
read_html(paste0('https://www.silvioiwata.com.br/imoveis/venda?pagina=',j))
urls <- main_page %>% html_nodes("div.box-img-lista") %>% html_elements('a') %>% html_attr("href") %>% gsub(' ','',.)
for (i in 1:length(urls)){
category <- main_page %>% html_nodes("div.lista-imoveis-detalhes") %>% html_nodes("p") %>% .[2*i] %>% html_text(trim=TRUE) %>% strsplit("\\s*\n\\s*") %>% .[[1]] %>% .[1]
area <- main_page %>% html_nodes("div.lista-imoveis-detalhes") %>% html_nodes("p") %>% .[2*i] %>% html_text(trim=TRUE) %>% strsplit("\\s*\n\\s*") %>% .[[1]] %>% .[2] %>% str_extract("(?<=: )[0-9,.]+") %>% gsub(",", ".", .) %>% as.numeric(.)
district <- main_page %>% html_nodes("div.lista-imoveis-detalhes") %>% html_nodes("p") %>% .[i] %>% html_text(trim=TRUE) %>% strsplit("\\s*\n\\s*") %>% .[[1]] %>% .[2] %>% strsplit(" - ") %>% .[[1]] %>% .[1]
price <- main_page %>% html_elements("div.lista-imoveis-detalhes") %>% html_nodes("span.valor") %>% .[i] %>% html_text()
property_url <- paste0("https://www.silvioiwata.com.br", urls[i])
property_page <-
read_html(property_url)
lat <- property_page %>% html_nodes("#coordenadas_mapa") %>% html_text()%>% strsplit(",") %>% .[[1]] %>% .[1] %>% as.numeric(.)
long <- property_page %>% html_nodes("#coordenadas_mapa") %>% html_text()%>% strsplit(",") %>% .[[1]] %>% .[2] %>% as.numeric(.)
broker <- 'Silvio Iwata'
property_info <- data.frame(property_url = property_url,
broker = broker,
district = district,
price = price,
category = category,
area = area,
bedrooms = NA,
bathrooms = NA,
garage = NA,
lat = lat,
long = long)
displayed_properties <- bind_rows(displayed_properties, property_info)
}
}
# Past properties
past_properties <- read.csv2("C:\\Users\\joaov\\Documents\\Imoveis Maringá\\Past Displayed Properties.csv")
past_properties <- read.csv2("C:\\Users\\joaov\\Documents\\Maringa Housing\\Past Displayed Properties.csv")
past_properties <- past_properties %>% select(-X)
write.csv2(displayed_properties, "Past Displayed Properties.csv")
# Sold properties ##############################################################
sold_properties <- merge(past_properties, displayed_properties, by = c("property_url"), all.x = TRUE)
sold_properties <- sold_properties[is.na(sold_properties$district.y), ]
sold_properties <- sold_properties[, !names(sold_properties) %in% c("broker.y", "district.y", "price.y", "category.y", "area.y", "bedrooms.y", "bathrooms.y", "garage.y", "lat.y", "long.y")]
names(sold_properties) <- sub("\\.x", "", names(sold_properties))
sold_properties$sold_date <- as.character(Sys.Date() - 1)
past_sold_properties <- read.csv2("C:\\Users\\joaov\\Documents\\Maringa Housing\\Past Sold Properties.csv")
past_properties <- read.csv2("C:\\Users\\joaov\\Documents\\Maringa Housing\\Past Displayed Properties.csv")
past_properties <- past_properties %>% select(-X)
write.csv2(displayed_properties, "Past Displayed Properties.csv")
sold_properties <- merge(past_properties, displayed_properties, by = c("property_url"), all.x = TRUE)
sold_properties <- sold_properties[is.na(sold_properties$district.y), ]
sold_properties <- sold_properties[, !names(sold_properties) %in% c("broker.y", "district.y", "price.y", "category.y", "area.y", "bedrooms.y", "bathrooms.y", "garage.y", "lat.y", "long.y")]
names(sold_properties) <- sub("\\.x", "", names(sold_properties))
sold_properties$sold_date <- as.character(Sys.Date() - 1)
past_sold_properties <- read.csv2("C:\\Users\\joaov\\Documents\\Maringa Housing\\Past Sold Properties.csv")
#Loads the rvest, stringr, dplyr and glue libraries
suppressWarnings({
suppressPackageStartupMessages({
library(rvest)
library(stringr)
library(dplyr)
library(glue)
})
})
setwd("C:\\Users\\joaov\\Documents\\Maringa Housing")
# Pedro Granado Imoveis
displayed_properties <- data.frame(NULL)
main_page <-
read_html('https://www.pedrogranado.com.br/pesquisa-de-imoveis/?locacao_venda=V&id_cidade%5B%5D=35&finalidade=&dormitorio=&garagem=&vmi=&vma=&ordem=1')
num_properties <- main_page %>% html_elements("option") %>% .[5] %>% html_text() %>% str_extract(., "(?<=\\()[^)]*(?=\\))") %>% as.integer(.)
num_pages = ceiling(num_properties/16)
for (j in 1:num_pages){
main_page <-
read_html(paste0('https://www.pedrogranado.com.br/pesquisa-de-imoveis/?locacao_venda=V&id_cidade%5B%5D=35&finalidade=&dormitorio=&garagem=&vmi=&vma=&ordem=1&&pag=',j))
urls <- main_page %>% html_nodes("div.col-lg-4") %>% html_elements('a') %>% html_attr("href") %>% unique(.)
for (i in 1:length(urls)){
district <- main_page %>% html_nodes("h4.lead") %>% html_text() %>% .[i]
price <- main_page %>% html_nodes("h3") %>% html_text() %>% .[i+1]
property_url <- paste0("https://www.pedrogranado.com.br/", urls[i])
property_page <-
read_html(property_url)
# Category: Apartment, terrain, house
category <- property_page %>% html_nodes('div.col-4.mb-4') %>% html_nodes('span') %>% html_text() %>% .[1]
area <- property_page %>% html_nodes('div.col-4.mb-4') %>% html_nodes('span') %>% html_text(trim=TRUE) %>% .[3] %>% gsub(' M²','',.) %>% as.numeric(.)
lat <- property_page %>% html_nodes("iframe") %>% html_attr("src") %>% .[2] %>% str_extract("(?<=latIni=)-?\\d+\\.\\d+") %>% as.numeric(.)
long <- property_page %>% html_nodes("iframe") %>% html_attr("src") %>% .[2] %>% str_extract("(?<=longIni=)-?\\d+\\.\\d+") %>% as.numeric(.)
bedrooms <- property_page %>% html_nodes('div.comodos') %>% html_text() %>% .[1] %>% as.integer(.)
bathrooms <- property_page %>% html_nodes('div.comodos') %>% html_text() %>% .[2] %>% as.integer(.)
suite <- property_page %>% html_nodes('div.comodos') %>% html_text() %>% .[3] %>% as.integer(.)
garage <- property_page %>% html_nodes('div.comodos') %>% html_text() %>% .[4] %>% as.integer(.)
broker <- 'Pedro Granado Imóveis'
property_info <- data.frame(property_url = property_url,
broker = broker,
district = district,
price = price,
category = category,
area = area,
bedrooms = bedrooms+suite,
bathrooms = bathrooms+suite,
garage = garage,
lat = lat,
long = long)
displayed_properties <- bind_rows(displayed_properties, property_info)
}
}
# Lelo Imoveis
main_page <-
read_html('https://www.leloimoveis.com.br/imoveis/venda-maringa')
num_properties = main_page %>% html_nodes("strong.list__highlight") %>% html_text() %>% str_extract("\\d+") %>% as.integer(.)
num_pages = ceiling(num_properties/16)
for (j in 1:num_pages){
main_page <-
read_html(paste0('https://www.leloimoveis.com.br/imoveis/venda-maringa-pagina-',j))
urls <- main_page %>% html_nodes("div.list__hover") %>% html_elements('a') %>% html_attr("href")
for (i in 1:length(urls)){
category <- main_page %>% html_elements("span.list__type") %>% .[i] %>% html_text() %>% strsplit(" ") %>% .[[1]] %>% .[1]
price <- main_page %>% html_elements("span.list__price") %>% .[seq(1, length(.), by = 2)] %>% html_text() %>% .[i]
district <- main_page %>% html_elements("span.list__address") %>% .[i] %>% html_text(trim=TRUE) %>% strsplit(" - ") %>% .[[1]] %>% .[1]
property_url <- paste0("https://www.leloimoveis.com.br", urls[i])
property_page <-
read_html(property_url)
bedrooms <- property_page %>% html_nodes("div.jetgrid.jetgrid--justify-left.jetgrid--align-center") %>% html_nodes("strong") %>% html_text(trim=TRUE) %>% .[6] %>% as.integer(.)
bathrooms <- property_page %>% html_nodes("div.jetgrid.jetgrid--justify-left.jetgrid--align-center") %>% html_nodes("strong") %>% html_text(trim=TRUE) %>% .[7] %>% as.integer(.)
garage <- property_page %>% html_nodes("div.jetgrid.jetgrid--justify-left.jetgrid--align-center") %>% html_nodes("strong") %>% html_text(trim=TRUE) %>% .[8] %>% as.integer(.)
area <- property_page %>% html_nodes("div.jetgrid.jetgrid--justify-left.jetgrid--align-center") %>% html_nodes("strong") %>% html_text(trim=TRUE) %>% .[5] %>% str_extract(".*(?=m)") %>% gsub(',','.',.) %>% as.numeric(.)
lat <- property_page %>% html_nodes("div.card__map-container") %>% html_attr("data-latitude") %>% as.numeric(.)
long <- property_page %>% html_nodes("div.card__map-container") %>% html_attr("data-longitude") %>% as.numeric(.)
broker <- 'Lelo Imóveis'
property_info <- data.frame(property_url = property_url,
broker = broker,
district = district,
price = price,
category = category,
area = area,
bedrooms = bedrooms,
bathrooms = bathrooms,
garage = garage,
lat = lat,
long = long)
displayed_properties <- bind_rows(displayed_properties, property_info)
}
}
# Silvio Iwata Imoveis
main_page <-
read_html('https://www.silvioiwata.com.br/imoveis/venda')
num_properties = main_page %>% html_nodes("p.cor-primaria") %>% html_text() %>% str_extract("\\d+") %>% as.integer(.)
num_pages = ceiling(num_properties/9)
for (j in 1:num_pages){
main_page <-
read_html(paste0('https://www.silvioiwata.com.br/imoveis/venda?pagina=',j))
urls <- main_page %>% html_nodes("div.box-img-lista") %>% html_elements('a') %>% html_attr("href") %>% gsub(' ','',.)
for (i in 1:length(urls)){
category <- main_page %>% html_nodes("div.lista-imoveis-detalhes") %>% html_nodes("p") %>% .[2*i] %>% html_text(trim=TRUE) %>% strsplit("\\s*\n\\s*") %>% .[[1]] %>% .[1]
area <- main_page %>% html_nodes("div.lista-imoveis-detalhes") %>% html_nodes("p") %>% .[2*i] %>% html_text(trim=TRUE) %>% strsplit("\\s*\n\\s*") %>% .[[1]] %>% .[2] %>% str_extract("(?<=: )[0-9,.]+") %>% gsub(",", ".", .) %>% as.numeric(.)
district <- main_page %>% html_nodes("div.lista-imoveis-detalhes") %>% html_nodes("p") %>% .[i] %>% html_text(trim=TRUE) %>% strsplit("\\s*\n\\s*") %>% .[[1]] %>% .[2] %>% strsplit(" - ") %>% .[[1]] %>% .[1]
price <- main_page %>% html_elements("div.lista-imoveis-detalhes") %>% html_nodes("span.valor") %>% .[i] %>% html_text()
property_url <- paste0("https://www.silvioiwata.com.br", urls[i])
property_page <-
read_html(property_url)
lat <- property_page %>% html_nodes("#coordenadas_mapa") %>% html_text()%>% strsplit(",") %>% .[[1]] %>% .[1] %>% as.numeric(.)
long <- property_page %>% html_nodes("#coordenadas_mapa") %>% html_text()%>% strsplit(",") %>% .[[1]] %>% .[2] %>% as.numeric(.)
broker <- 'Silvio Iwata'
property_info <- data.frame(property_url = property_url,
broker = broker,
district = district,
price = price,
category = category,
area = area,
bedrooms = NA,
bathrooms = NA,
garage = NA,
lat = lat,
long = long)
displayed_properties <- bind_rows(displayed_properties, property_info)
}
}
write.csv2(displayed_properties, "Past Displayed Properties.csv")
